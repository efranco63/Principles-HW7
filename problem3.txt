{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf140
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 1) While processing the data, I read in data from the CSV files in two different ways. For the 311 data, instead of reading the entire file into a data frame using pandas, I read only the entries in the zip code file for part 1 and both zip code and agency for part 2. This reduced the amount of resources that had to be allocated for reading in data and improved processing time. In addition, reading in the data this way allowed me to properly configure and keep only those zips which met my criteria (did not include \'91-\'91 character and were actually digits from length 4-6). When reading in the data from the zip code populations, since this file is small compared to the 311 file, I read in the whole file as a data frame using pandas. I then join this data frame with my other data frame containing zip code counts and agencies with the highest counts, joining them on zip code. \
2) For plotting the data, I used matplotlib. For part 1, I just used the function matplotlib.pyplot.scatter and passed in the 2 arrays, population and counts. For part 2, however, since I had to also display a third dimension, which was the agency with the highest count, I had to plot a slightly different way. I looped through a list of agencies specified and created a separate data frame for each, and from that data frame I constructed arrays which I plotted. I manually set the lower limits of the x and y axes in order to be able to better see the small values. }